<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close"
          p:driverClass="com.mysql.jdbc.Driver"
          p:jdbcUrl="jdbc:mysql://localhost:3306/sshtest"
          p:user="root"
          p:password="jdd19930808"
          p:maxPoolSize="40"
          p:minPoolSize="1"
          p:initialPoolSize="2"
          p:maxIdleTime="20"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="packagesToScan" value="cn.gtmap.ssh.entity."></property>-->
        <property name="mappingResources">
            <list>
                <value>User.hbm.xml</value>
            </list>
        </property>
        <!-- 定义Hibernate的SessionFactory的属性 -->
        <property name="hibernateProperties">
            <!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 	-->
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=true
                hibernate.format_sql=true
                #开启二级缓存
                hibernate.cache.use_second_level_cache=false
                hibernate.c
                <!--#设置二级缓存的提供者-->
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
        </property>
    </bean>

    <!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
    <!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
    <!-- 并注入SessionFactory的引用 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <!--<bean id="loginService" class="cn.gtmap.ssh.service.impl.LoginServiceImpl">
        <property name="loginDao" ref="loginDao"></property>
    </bean>
    <bean id="loginAction" class="cn.gtmap.ssh.action.LoginAction" scope="prototype">
        <property name="loginService" ref="loginService"></property>
    </bean>
    <bean id="loginDao" class="cn.gtmap.ssh.dao.impl.LoginDaoImpl" scope="prototype">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>-->


    <!--拦截器实现-->
    <bean id="loginInterceptor" class="com.hfut.zngl.filter.LoginInterceptor"></bean>
    <!--数据库dao层实现-->
    <bean id="userDao" class="com.hfut.zngl.dao.Impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!--用户服务层实现-->
    <bean id="userService" class="com.hfut.zngl.service.Impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
    <!--登陆处理-->
    <bean id="loginAction" class="com.hfut.zngl.action.LoginAction">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="addUserAction" class="com.hfut.zngl.action.AddUserAction">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="updateUserAction" class="com.hfut.zngl.action.UpdateUserAction">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="userAction" class="com.hfut.zngl.action.userAction">
        <property name="userService" ref="userService"></property>
    </bean>

    <bean id="updatePWDAction" class="com.hfut.zngl.action.updatePWDAction">
        <property name="userService" ref="userService"></property>
    </bean>


</beans>